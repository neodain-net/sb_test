kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
#name: c1
#networking:
#  apiServerAddress: "172.23.174.254"  # 설정하지 않으면 https://127.0.0.1 및 특정 포트번호 할당 된다.
#  apiServerPort: 55641
nodes:
  - role: control-plane
    image: kindest/node:v1.33.1@sha256:050072256b9a903bd914c0b2866828150cb229cea0efe5892e2b644d5dd3b34f
    extraPortMappings:
      - containerPort: 30000
        hostPort: 30000
          # listenAddress: "0.0.0.0"  # Optional, defaults to "0.0.0.0"
          # protocol: tcp             # Optional, defaults to tcp
      - containerPort: 31000
        hostPort: 31000 
      - containerPort: 32000
        hostPort: 32000 
      - containerPort: 33000
        hostPort: 33000 
      - containerPort: 34000
        hostPort: 34000 
      - containerPort: 80
        hostPort: 80 
      - containerPort: 8080 
        hostPort: 8080 
  - role: worker
    image: kindest/node:v1.33.1@sha256:050072256b9a903bd914c0b2866828150cb229cea0efe5892e2b644d5dd3b34f
  - role: worker
    image: kindest/node:v1.33.1@sha256:050072256b9a903bd914c0b2866828150cb229cea0efe5892e2b644d5dd3b34f


# k get no   // node status
# kubectl taint nodes c1-control-plane node-role.kubernetes.io/control-plane:NoSchedule-
# kubectl label node c1-worker node-role.kubernetes.io/worker=worker
# kubectl get pod -A
# kubectl create ns dev
# kubectl -n dev create deployment nginx --image=nginx
# kubectl -n dev expose deployment nginx --port 80
# k get all -n dev
# k get po -n dev
# k get svc -n dev
# curl 127.0.0.1:1234
# // 접속 응답 fail 확인
# k -n dev get all // TYPE이 ClusterIP로 되어 있고, PORT(S)는 80/TCP로 표시 됨.
# kubectl -n dev patch svc nginx -p `{"spec": {"type": "NodePort"}}`  
# // k -n dev get svc 시 TYPE이 NodePort로 변경되는지 확인 및 PORT(S)가 80:31607/TCP로 표시되는지 확인 필요.
# curl 192.168.56.40:31607
# k -n dev edit svc nginx  
# // 해당 명령을 수행하면 nginx 설정 yaml파일이 열리고, 내부의 spec.ports.nodePort를 31607에서 30000으로 변경 후 저장.
# k -n dev get svc
# // PORT(S)의 정보가 80:30000/TCP로 변경되었는지 확인.
# curl 192.168.56.40:30000 
# // 정상적인 접속 응답 출력 확인
# http://192.168.56.40:30000 으로 접속 시 Welcome to nginx! 가 표시되는 웹화면 확인.
# kind get clusters
# kind delete cluster --name [c2]
# kind get clusters
