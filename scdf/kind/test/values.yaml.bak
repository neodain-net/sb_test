# 🧾 추가 고려 사항 반영: 실무형 Helm 배포 설계 기반 values.yaml
# Kind 기반 로컬 테스트와 실운영 Kubernetes 배포 가능 설계

# ✅ 전체 아키텍처 개요:
# - 배치 구성: Spring Batch Job (10개) + SCDF Task 기반 Spring Batch (10개)
# - 목적: 외부 DB → 데이터 추출 → 변환 → InfluxDB 저장 → Grafana/Prometheus 시각화
# - Helm 기반으로 배포, Kind에서 테스트 후 K8s 운영 반영

Release:
  Name: "rel"
  Service: "spring-batch"

mysql:
  enabled: true
  image:
    repository: mysql
    tag: "8.0"
  auth:
    rootPassword: root
    database: demo
    username: neodain
    password: Kht72@eye1
  service:
    port: 3306
    nodePort: 3307
  persistence:
    enabled: true
    mountPath: /var/lib/mysql
    existingClaim: mysql-pvc
  nodeSelector:
    role: work

mariadb:
  enabled: true
  image:
    repository: mariadb
    tag: "10"
  auth:
    rootPassword: root
    database: demo
    username: neodain
    password: Kht72@eye1
  service:
    port: 3306
    nodePort: 3308
  persistence:
    enabled: true
    mountPath: /var/lib/mysql
    existingClaim: mariadb-pvc
  nodeSelector:
    role: work

influxdb:
  enabled: true
  image:
    repository: influxdb
    tag: latest
  env:
    - name: DOCKER_INFLUXDB_INIT_MODE
      value: setup
    - name: DOCKER_INFLUXDB_INIT_USERNAME
      value: neodain
    - name: DOCKER_INFLUXDB_INIT_PASSWORD
      value: Kht72@eye1
    - name: DOCKER_INFLUXDB_INIT_ORG
      value: neodain
    - name: DOCKER_INFLUXDB_INIT_BUCKET
      value: neodain
    - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
      value: xxxxxx 
  service:
    port: 8086
    nodePort: 8087
  persistence:
    enabled: true
    mountPath: /var/lib/influxdb2
    existingClaim: influxdb-pvc
  nodeSelector:
    role: main

grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: latest
  service:
    port: 3000
    nodePort: 3001
  persistence:
    enabled: true
    mountPath: /var/lib/grafana
    existingClaim: grafana-pvc
  dependsOn:
    - influxdb
  nodeSelector:
    role: main

# 🎯 실무형 배치 앱 (Job + Task 구분 없이 확장 가능)
batchApps:
  enabled: true
  apps:

{{-range $i, $app := until 10 }}

    - name: neo-batch-job-0{{ add $i 1 }}
      # image: neo-batch-job-0{{ add $i 1 }}:0.0.1
      image: 
        repository: neo-audit-log
        tag: 0.0.1
        pullPolicy: 
      restartPolicy: Never
      env: 
        - name: springProfile
          value: local 
        - name: jobCron 
          value: 0, 0/5, 0, 0, 0
      command:
        - "--rtm.batch.job.start=202507091730"
        - "--rtm.batch.job.end=202507091740"
        - "--rtm.batch.job.chunk=200"
        - "--rtm.batch.job.interval=10"
        - "--rtm.batch.job.delay=5"
      service:
        # port: 8080
        port: {{ add 8080 $i }}
      nodeSelector:
        role: work

    - name: neo-batch-task-0{{ add $i 1 }}
      # image: neo-batch-task-0{{ add $i 1 }}:0.0.1
      image: 
        repository: neo-audit-log
        tag: 0.0.1
        pullPolicy: 
      restartPolicy: Never
      env: 
        - name: springProfile
          value: local 
        - name: jobCron 
          value: 0, 0/5, 0, 0, 0
      command:
        - "--spring.cloud.task.name=task01"
      service:
        # port: 8090
        port: {{ add 8090 $i }}
      nodeSelector:
        role: work

{{- end }}

    # ... 나머지 앱도 동일하게 확장 가능

# ✨ SCDF 관련 설정 (추후 scdf section 추가 예정)
scdf:
  enabled: true
  nodeSelector:
    role: main
  externalDatabase:
    host: mariadb
    port: 3306
    user: neodain
    password: Kht72@eye1
    database: demo
  skipper:
    enabled: true

