{{- /*
  Purpose: Validate mutually exclusive mode per job item.
  This file intentionally renders no YAML, but executes logic and can fail the render.
*/ -}}
{{- range $idx, $it := .Values.batchJobs.jobs }}
  {{- $name := default (printf "item-%d" $idx) $it.name -}}
  {{- $mode := default "" $it.mode -}}

  {{- $wantJob  := eq $mode "job" -}}
  {{- $wantCron := eq $mode "cron" -}}
  {{- $wantDep  := eq $mode "deployment" -}}
  {{- $cnt := 0 -}}
  {{- if $wantJob  }}{{- $cnt = add $cnt 1 -}}{{- end -}}
  {{- if $wantCron }}{{- $cnt = add $cnt 1 -}}{{- end -}}
  {{- if $wantDep  }}{{- $cnt = add $cnt 1 -}}{{- end -}}

  {{- if ne $cnt 1 -}}
    {{- fail (printf "batch-job: '%s' must set exactly one mode to 'job' | 'cron' | 'deployment' (got mode=%q)" $name $mode) -}}
  {{- end -}}

  {{- if $wantCron -}}
    {{- if not (and $it.cron $it.cron.schedule) -}}
      {{- fail (printf "batch-job: '%s' mode=cron requires .cron.schedule (crontab) in values" $name) -}}
    {{- end -}}
  {{- end -}}
{{- end }}
